# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2007, 2016 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
# Package specific ResourceBundle properties file

SOAPBindingValidator.Transport_URI_required=Transport URI required on <soap:binding> element
SOAPBindingValidator.Unsupported_transport=The <soap:binding> element only supports a transport URI of http://schemas.xmlsoap.org/soap/http.  No other transport is currently supported.
SOAPBindingValidator.Unsupported_style_attribute=The <soap:binding> element supports a style attribute with a value of either "rpc" or "document".
SOAPBindingValidator.Only_one_binding_allowed=Only one <soap:binding> element is allowed per binding.
SOAPOperationValidator.Unsupported_style_attribute=The <soap:operation> element supports a style attribute with a value of either "rpc" or "document".
SOAPBodyValidator.R2717_Literal_Binding=WS-I R2717: An rpc-literal binding MUST have the namespace attribute specified, the value of which MUST be an absolute URI, on contained soapbind:body elements.

SOAPBodyValidator.Unsupported_use_attribute=The <soap:body> element supports a use attribute with a value of either "literal" or "encoded".
SOAPBodyValidator.No_abstract_message=The <soap:body> element is defined for a message that does not exist.
SOAPBodyValidator.Only_one_body_allowed=Only one <soap:body> element is allowed per binding message.
SOAPBodyValidator.Atleast_one_body_Required=At least one <soap:body> element is required per input/ouput message in a soap operation.
SOAPBodyValidator.Part_already_in_use_by_elem=Part ''{0}'' of message {1} is already in use by the {2} element.

SOAPFaultValidator.Unsupported_use_attribute=The <soap:fault> element supports a use attribute with a value of either "literal" or "encoded".
SOAPFaultValidator.Missing_name=The <soap:fault> element requires the name attribute
SOAPFaultValidator.No_soap_fault_defined=Missing <soap:fault> element for the binding fault.
SOAPFaultValidator.Only_one_fault_allowed=Only one <soap:fault> element is allowed per binding fault.
SOAPFaultValidator.Fault_name_not_match=The value of the name attribute on <soap:fault> element MUST match the value of the name attribute on its parent <wsdl:fault> element. 

SOAPHeaderValidator.Missing_message=The <soap:header> element requires the message attribute
SOAPHeaderValidator.Missing_part=The <soap:header> element requires the part attribute
SOAPHeaderValidator.Missing_use=The <soap:header> element requires the use attribute
SOAPHeaderValidator.Unsupported_header_use_attribute=The <soap:header> element supports a use attribute with a value of either "literal" or "encoded".
SOAPHeaderValidator.Part_already_in_use_by_elem=Part ''{0}'' of message {1} is already in use by the {2} element.

SOAPHeaderFaultValidator.Missing_header_fault_message=The <soap:headerfault> element requires the message attribute
SOAPHeaderFaultValidator.Missing_header_fault_part=The <soap:headerfault> element requires the part attribute
SOAPHeaderFaultValidator.Missing_header_fault_use=The <soap:headerfault> element requires the use attribute
SOAPHeaderFaultValidator.Unsupported_header_fault_use_attribute=The <soap:headerfault> element supports a use attribute with a value of either "literal" or "encoded".

SOAPAddressValidator.Missing_location=The <soap:address> element requires the location attribute
SOAPAddressValidator.Unsupported_location_attribute=The <soap:address> element must have a location attribute that is a valid URL.
SOAPAddressValidator.Missing_SoapAddress=A port specifying soap binding needs to specify a soap address.
SOAPAddressValidator.Only_one_SoapAddress_allowed=Only one <soap:address> element is allowed per port.
SOAPAddressValidator.Unsupported_Token_Format=The <soap:address> element can contain tokens in the following formats: 1)${URL} 2)http(s)://${host}:${Http(s)DefaultPort}/${context}. Either the whole URL is defined as a token or tokens can be optionally defined for host, port(only ${HttpDefaultPort} or ${HttpsDefaultPort} is allowed), and service context.
